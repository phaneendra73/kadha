generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model userprofiles {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  password   String
  profileUrl String?
  status     UserStatus @default(ACTIVE)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  name       String?
  blogs      blogs[]
}

model blogs {
  id          Int           @id @default(autoincrement())
  title       String
  imageUrl    String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  authorId    Int
  published   Boolean       @default(false)
  blogContent blogmd?
  author      userprofiles  @relation(fields: [authorId], references: [id])
  tags        tagsonblogs[]
}

model blogmd {
  id        Int      @id @default(autoincrement())
  content   String
  blogId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blog      blogs    @relation(fields: [blogId], references: [id])
}

model tags {
  id        Int           @id @default(autoincrement())
  name      String        @unique
  createdAt DateTime      @default(now())
  blogs     tagsonblogs[]
}

model tagsonblogs {
  blogId     Int
  tagId      Int
  assignedAt DateTime @default(now())
  blog       blogs    @relation(fields: [blogId], references: [id])
  tag        tags     @relation(fields: [tagId], references: [id])

  @@id([blogId, tagId])
}

enum UserStatus {
  ACTIVE
  DELETED
}
